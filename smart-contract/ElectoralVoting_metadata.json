{
	"compiler": {
		"version": "0.6.6+commit.6c089d02"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_politicalOffice",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_country",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_electionYear",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_startTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_endTime",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_politicalParty",
						"type": "string"
					},
					{
						"internalType": "uint32",
						"name": "_number",
						"type": "uint32"
					}
				],
				"name": "addCandidate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "candidates",
				"outputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "politicalParty",
						"type": "string"
					},
					{
						"internalType": "uint32",
						"name": "number",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "country",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "electionYear",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_number",
						"type": "uint32"
					}
				],
				"name": "getCantidate",
				"outputs": [
					{
						"internalType": "string",
						"name": "name_",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "politicalParty_",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_number",
						"type": "uint32"
					}
				],
				"name": "getCantidateVotesCount",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "voteCount_",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getElectionWinner",
				"outputs": [
					{
						"internalType": "string",
						"name": "name_",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "politicalParty_",
						"type": "string"
					},
					{
						"internalType": "uint32",
						"name": "number_",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMyVote",
				"outputs": [
					{
						"internalType": "string",
						"name": "name_",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "politicalParty_",
						"type": "string"
					},
					{
						"internalType": "uint32",
						"name": "number_",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "governmentOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "politicalOffice",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "_number",
						"type": "uint32"
					}
				],
				"name": "vote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Implements voting process for elections.",
			"methods": {
				"addCandidate(string,string,uint32)": {
					"details": "Add a new election candidate",
					"params": {
						"_name": "name of the candidate to be added",
						"_number": "number that people will use to vote on this candidate",
						"_politicalParty": "political party of the candidate"
					}
				},
				"constructor": {
					"details": "Create a new ElectoralVoting contract.",
					"params": {
						"_country": "country of election",
						"_electionYear": "year of election",
						"_endTime": "the time when the election will end",
						"_politicalOffice": "political office to be contested in this election",
						"_startTime": "the time when the election will start"
					}
				},
				"getCantidate(uint32)": {
					"details": "Get a candidate information",
					"params": {
						"_number": "number of the candidate"
					},
					"returns": {
						"name_": "name of the candidate searched",
						"politicalParty_": "political party of the candidate searched"
					}
				},
				"getCantidateVotesCount(uint32)": {
					"details": "Get a candidate votes count",
					"params": {
						"_number": "number of the candidate"
					},
					"returns": {
						"voteCount_": "number of votes of the candidate"
					}
				},
				"getElectionWinner()": {
					"details": "Compute the votes to check the election winner",
					"returns": {
						"name_": "name of the winner candidate",
						"number_": "number of the winner candidate",
						"politicalParty_": "political party of the winner candidate"
					}
				},
				"getMyVote()": {
					"details": "Get the candidate information you voted for",
					"returns": {
						"name_": "name of the candidate you voted for",
						"number_": "number of the candidate you voted for",
						"politicalParty_": "political party of the candidate you voted for"
					}
				},
				"vote(uint32)": {
					"details": "Give your vote to a candidate",
					"params": {
						"_number": "number of the candidate to be voted"
					}
				}
			},
			"title": "ElectoralVoting"
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"browser/ElectoralVoting.sol": "ElectoralVoting"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"browser/ElectoralVoting.sol": {
			"keccak256": "0x40b31dea6c23fa52465fcdf57696417bb938c8e2a830a59d659e127300c4b556",
			"urls": [
				"bzz-raw://4737b2d32c02ee9fd33f0e881a13fbe4ba813a4a87f935bc553a0d5064dcdb59",
				"dweb:/ipfs/QmcAAd6oFGLAcFvbqJ1B63GtppyyUrJcJmuuUXeWFa6Vy7"
			]
		}
	},
	"version": 1
}